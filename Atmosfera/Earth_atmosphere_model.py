# -*- coding: utf-8 -*-
"""
Created on Sun Jul 29 11:58:15 2018

@author: Gabriel
"""
import matplotlib.pyplot as plt
import numpy as np
import altura as h
#
#NOTA:
##### Funcion Atmosphere() es una tupla de 5 dimensiones de longitud 5008*5, 
##### 
##### Atmosphere()=[[T],[P],[ro],[C],[h]]
#####
##### Ejemplo:
#####
##### Atmosphere()[0]==[T]
##### Atmosphere()[4]==[h]

#==============================================================================
# Definimos la altura a la que hacemos el calculo
#==============================================================================
Altura=np.array(h.H())
R=287.053 #[J/Kg K]
gamma=1.4 #Specific heat ratio


#altura=np.load("Altura.npy")
#altura=np.array(altura,dtype=float)
#==============================================================================
# Definimos la temperatura
#==============================================================================

def Atmosphere():
    global Altura
    #TABLE 4 http://www.braeunig.us/space/atmmodel.htm#modeling
    #UNITS:T[K]//P[Pa]
    haltura=[]
    #==============================================================================
    # (1) TROPOSPHERE 0-11KM
    #==============================================================================
    h=Altura[0]#km
    T_1=288.15-6.5*h
    P_1=101325.*(288.15/(288.15-6.5*h))**(34.1632/-6.5)
    h=h.tolist()
    haltura+=h
    #==============================================================================
    # (2.1) STRATOSPHERE 11-20 KM
    #==============================================================================
    h=Altura[1]#km
    T_21=216.65+np.zeros(len(h))
    P_21=22632.06*np.e**(-34.1632*(h-11)/216.65)
    h=h.tolist()
    haltura+=h
    
    #==============================================================================
    # (2.2) STRATOSPHERE 20-32 KM
    #==============================================================================
    h=Altura[2]#km
    T_22=169.65+h
    P_22=5474.889*(216.65/(216.65+(h-20)))**(34.1632)
    h=h.tolist()
    haltura+=h
    
    #==============================================================================
    # (2.3) stratosphere 32-47 km
    #==============================================================================
    h=Altura[3]#km
    T_23=139.05+2.8*h
    P_23=868.0187*(228.65/(228.65+2.8*(h-32)))**(34.1632/2.8)
    h=h.tolist()
    haltura+=h
    
    #==============================================================================
    # (3.1) MESOSPHERE 47-51 KM
    #==============================================================================
    h=Altura[4]#km
    T_31=139.05+2.8*h
    P_31=110.9063*np.e**(-34.1632*(h-47)/270.65)
    h=h.tolist()
    haltura+=h
    
    #==============================================================================
    #  (3.2) MESOSPHERE 51-71 KM
    #==============================================================================
    h=Altura[5]#km
    T_32=413.45-2.8*h
    P_32=66.93887*(270.65/(270.65-2.8*(h-51)))**(34.1632/-2.8)
    h=h.tolist()
    haltura+=h
    
    #==============================================================================
    #  (3.3) MESOSPHERE 71-84.852 KM
    #==============================================================================
    h=Altura[6]#km
    T_33=356.65-2.0*h
    P_33=3.956420*(214.65/(214.65-2*(h-71)))**(34.1632/-2)
    h=h.tolist()
    haltura+=h
    
    
    
    #==============================================================================
    # 
    #==============================================================================
    T_0_84=np.array(T_1.tolist()+T_21.tolist()+T_22.tolist()+T_23.tolist()+T_31.tolist()+T_32.tolist()+T_33.tolist())
    P_0_84=np.array(P_1.tolist()+P_21.tolist()+P_22.tolist()+P_23.tolist()+P_31.tolist()+P_32.tolist()+P_33.tolist())
    #==============================================================================
    # FROM 0 TO 84.852
    #==============================================================================
    #DENSITY ro[Kg/m3] ro=P/(R*T)
    #SPEED SOUND C[m/s] C=(gamma*R*T)**(1/2)
 
    
    ro_0_84=P_0_84/(R*T_0_84)
 #   C_0_84=np.sqrt(gamma*R*T_0_84)
    
    
    
    
    
    
    
#    h_0_84=np.arange(0,85.8,0.1)
    
    

    
    
    #TABLE 7&8 http://www.braeunig.us/space/atmmodel.htm#modeling
    #==============================================================================
    # (4) MESOPAUSE 86-91 KM
    #==============================================================================
    h=Altura[7]
    T_4=186.8673+np.zeros(len(h))
    P_4=np.e**(2.159582e-6*h**3-4.836957e-4*h**2-0.1425192*h+13.47530)
    ro_4=np.e**(-3.322622e-6*h**3+9.111460e-04*h**2-0.2609971*h+5.944694)
    h=h.tolist()
    haltura+=h
    #==============================================================================
    # (5.1) THERMOSPHERE 91-100 KM
    #==============================================================================
    h=Altura[8]
    T_51=263.1905-76.3232*np.sqrt(1-((h-91)/-19.9429)**2)
    P_51=np.e**(3.304895e-5 * h**3-0.009062730*h**2+0.6516698*h -11.03037)
    ro_51=np.e**(2.873405e-05*h**3-0.008492037*h**2+0.6541179*h-23.62010)
    h=h.tolist()
    haltura+=h
    #==============================================================================
    #  (5.2) THERMOSPHERE 100-110 KM
    #==============================================================================
    h=Altura[9]
    T_52=263.1905-76.3232*np.sqrt(1-((h-91)/-19.9429)**2)
    P_52=np.e**(6.693926e-5*h**3-0.01945388*h**21.719080*h-47.75030)
    ro_52=np.e**(-1.240774e-05*h**4+0.005162063*h**3-0.8048342*h**2+55.55996*h-1443.338)
    h=h.tolist()
    haltura+=h
    #==============================================================================
    # (5.3) THERMOSPHERE 110-120 KM
    #==============================================================================
    h=Altura[10]
    T_53=240+12*(h-110)
    P_53=np.e**(-6.539316e-5*h**3+0.02485568*h**2-3.22620*h+135.9355)
    ro_53=np.e**(-8.854164e-5*h**3+0.03373254*h**2-4.390837*h+176.5294)
    h=h.tolist()
    haltura+=h
    #==============================================================================
    # (5.4) THERMOSPHERE 120-150 KM
    #==============================================================================
    h=Altura[11]
    eta=(h-120)*(6356.766+120)/(6356.766+h)
    T_54=1000-640*np.e**(-0.01875*eta)
    P_54=np.e**(2.283506e-07*h**4-1.343221e-04*h**3+0.02999016*h**2-3.055446*h+113.5764)
    ro_54=np.e**(3.661771e-07*h**4-2.154344e-04*h**3+0.04809214*h**2-4.884744*h+172.3597)
    h=h.tolist()
    haltura+=h
    #==============================================================================
    # (5.5) THERMOSPHERE 150-200 KM
    #==============================================================================
    h=Altura[12]
    eta=(h-120)*(6356.766+120)/(6356.766+h)
    T_55=1000-640*np.e**(-0.01875*eta)
    P_55=np.e**(1.209434e-08*h**4-9.692458e-06*h**3+0.003002041*h**2-0.4523015*h+19.19151)
    ro_55=np.e**(1.906032e-08*h**4-1.527799e-05*h**3+0.004724294*h**2-0.6992340*h+20.50921)
    h=h.tolist()
    haltura+=h
    #==============================================================================
    # (5.6) THERMOSPHERE 200-300 KM
    #==============================================================================
    h=Altura[13]
    eta=(h-120)*(6356.766+120)/(6356.766+h)
    T_56=1000-640*np.e**(-0.01875*eta)
    P_56=np.e**(8.113942e-10*h**4-9.822568e-07*h**3+4.687616e-04*h**2-0.1231710*h+3.067409)
    ro_56=np.e**(1.199282e-09*h**4-1.451051e-06*h**3+6.910474e-04*h**2-0.1736220*h-5.321644)
    h=h.tolist()
    haltura+=h
    #==============================================================================
    # (5.7) THERMOSPHERE 300-500 KM
    #==============================================================================
    h=Altura[14]
    eta=(h-120)*(6356.766+120)/(6356.766+h)
    T_57=1000-640*np.e**(-0.01875*eta)
    P_57=np.e**(9.81467e-11*h**4-1.654439e-07*h**3+1.148115e-04*h**2-0.05431334*h-2.011365)
    ro_57=np.e**(1.140564e-10*h**4-2.130756e-07*h**3+1.570762e-04*h**2-0.07029296*h-12.89844)
    h=h.tolist()
    haltura+=h
    
    
    
    #==============================================================================
    # 
    #==============================================================================
    T_86_500=np.array(T_4.tolist()+T_51.tolist()+T_52.tolist()+T_53.tolist()+T_54.tolist()+T_55.tolist()+T_56.tolist()+T_57.tolist())
    P_86_500=np.array(P_4.tolist()+P_51.tolist()+P_52.tolist()+P_53.tolist()+P_54.tolist()+P_55.tolist()+P_56.tolist()+P_57.tolist())
    ro_86_500=np.array(ro_4.tolist()+ro_51.tolist()+ro_52.tolist()+ro_53.tolist()+ro_54.tolist()+ro_55.tolist()+ro_56.tolist()+ro_57.tolist())
    
    h_86_500=np.arange(86.91,501.9,0.1)
    
    
    #==============================================================================
    # 
    #==============================================================================
    h=np.array(haltura)
    T=np.array(T_0_84.tolist()+T_86_500.tolist())
    P=np.array(P_0_84.tolist()+P_86_500.tolist())
    ro=np.array(ro_0_84.tolist()+ro_86_500.tolist())
    #h=np.linspace(min(h_0_84),max(h_86_500),len(T))
    C=np.sqrt(gamma*R*T)
    print(
    '#################################\n'
    '###### ATMOSPHERE MODELING ######\n'
    '########### TEIDESAT ############\n'
    '###FROM 0 TO 500 KM ALTITUDE####\n'
    '######### T P ro C h ###########\n'
    '#################################')
    return T,P,ro,C,h


   
#==============================================================================
# ATMPOSPHERIC REPRESENTATION MODELING 0-500KM
#==============================================================================

T,P,ro,C,h=Atmosphere()
plt.figure(1)
plt.title(r'$Standard\ Atmosphere\ (0-500)Km$')

ax1=plt.axes()
plt.ylabel(r'$Altitude\ [Km]$')
plt.xlabel(r'$Temperature\ [K]$')
ax1.plot(T,h,'k')

ax2=plt.axes([0.65,0.65,0.2,0.2])
plt.title(r'$\rho(h)$')
ax2.plot(ro,h)
plt.xlabel(r'$\rho\ [\frac{Kg}{m^3}]$')
plt.ylabel(r'$Km$')
plt.ylim(0,50)

ax3=plt.axes([0.25,0.65,0.2,0.2])
plt.title(r'$P(h)$')
ax3.plot(P/1000,h)
plt.ylabel(r'$Km$')
plt.xlabel(r'$KPa$')
plt.ylim(0,50)


ax4=plt.axes([0.36,0.4,0.35,0.16])
plt.title(r'$C(h)$')
plt.ylabel(r'$Km$')
plt.xlabel(r'$VSound\ velocity[\frac{m}{s}]$')
ax4.plot(C,h)

plt.figure(2)
plt.title(r'$Atmospheric\ simulation\ (0-500)Km$')
ax1=plt.axes()
ax1.plot(h,C/np.max(C),h,ro/np.max(ro),h,P/np.max(P),h,T/np.max(T))
plt.grid()
plt.legend((r'$Velocity\ sound:C$',r'$Density:\rho$',r'$Presion:P$',r'$Temperature:T$'),loc=0)
plt.xlabel(r'$Altitud\ [Km]$')
